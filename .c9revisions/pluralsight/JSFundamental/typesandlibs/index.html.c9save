{"ts":1353369187787,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<!DOCTYPE html>\n<html>\n    <head>\n        <title> </title>\n    </head>\n    <body>\n\n    </body>\n</html>\n"]],"start1":0,"start2":0,"length1":0,"length2":103}]],"length":103}
{"contributors":[],"silentsave":false,"ts":1353326043631,"patch":[[{"diffs":[[0,"/title>\n"],[1,"        <script type=\"text/javascript\"></script>\n"],[0,"    </he"]],"start1":51,"start2":51,"length1":16,"length2":65}]],"length":152,"saved":false}
{"ts":1353326116522,"patch":[[{"diffs":[[0,"script\">"],[1,"\n        \n        /*\n        String\n        Number\n        Array\n           Underscore.js\n        Regular Expression\n        Date\n            Datejs\n        Library functions\n        */\n        \n        \n        "],[0,"</script"]],"start1":90,"start2":90,"length1":16,"length2":228}]],"length":364,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353326906725,"patch":[[{"diffs":[[0,"/title>\n"],[1,"        <script type=\"text/javascript\">\n        \n        /*\n        String\n        Number\n        Array\n           Underscore.js\n        Regular Expression\n        Date\n            Datejs\n        Library functions\n        */\n        \n        /*\n        \n        String\n        \n        var string1 = \"\";\n        var string2= '\"\"';\n        \n        no multiline string syntax\n        \n        \\\"\"\n        */\n        \n        /*\n        Number\n        all numbers are floating point\n        Decimal fractions are not exact\n        */\n        \n        </script>\n"],[0,"    </he"]],"start1":51,"start2":51,"length1":16,"length2":575}]],"length":662,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353330264337,"patch":[[{"diffs":[[0,"/title>\n"],[1,"        <script type=\"text/javascript\">\n        \n        /*\n        String\n        Number\n        Array\n           Underscore.js\n        Regular Expression\n        Date\n            Datejs\n        Library functions\n        */\n        \n        /*\n        \n        String\n        \n        var string1 = \"\";\n        var string2= '\"\"';\n        \n        no multiline string syntax\n        \n        \\\"\"\n        */\n        \n        /*\n        Number\n        all numbers are floating point\n        Decimal fractions are not exact\n        */\n        \n        /*\n        regular expression\n        \n        */\n        \n        /*\n        Date\n        \n        var birthday = new Date(2010,10,26);\n        \n        */\n        \n        </script>\n"],[0,"    </he"]],"start1":51,"start2":51,"length1":16,"length2":749}]],"length":836,"saved":false}
{"ts":1353331709800,"patch":[[{"diffs":[[0,"    */\n        \n"],[1,"        /*\n        eval\n        \n        slow\n        insecurity\n        \n        eval(\"alert('')\")\n        */\n        \n        /*\n        JSON\n        Uses object literals\n        lightweight\n        */\n        \n        /*\n        parse json2\n        parse\n        stringify\n        */\n        \n        //using json2\n        \n        var input = {};\n        \n        eval(input)\n\n        withJson2 = JSON.parse(input);\n        \n        JSON.stringify\n        \n        // isNAN\n        \n        toplevel function\n        \n        isNAN(5) //= false\n        parseFloat(\"48\") //string to number\n        \n        \n        \n        \n        \n        \n        \n"],[0,"        </script"]],"start1":758,"start2":758,"length1":32,"length2":688}]],"length":1492,"saved":false}
{"ts":1353331946433,"patch":[[{"diffs":[[0,"   \n"],[-1,"        \n        \n        \n        \n        \n"],[0,"    "]],"start1":1381,"start2":1381,"length1":53,"length2":8}]],"length":1447,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353416272031,"patch":[[{"diffs":[[0,"/title>\n"],[1,"        <script type=\"text/javascript\">\n        \n        /*\n        String\n        Number\n        Array\n           Underscore.js\n        Regular Expression\n        Date\n            Datejs\n        Library functions\n        */\n        \n        /*\n        \n        String\n        \n        var string1 = \"\";\n        var string2= '\"\"';\n        \n        no multiline string syntax\n        \n        \\\"\"\n        */\n        \n        /*\n        Number\n        all numbers are floating point\n        Decimal fractions are not exact\n        */\n        \n        /*\n        regular expression\n        \n        */\n        \n        /*\n        Date\n        \n        var birthday = new Date(2010,10,26);\n        \n        */\n        \n        /*\n        eval\n        \n        slow\n        insecurity\n        \n        eval(\"alert('')\")\n        */\n        \n        /*\n        JSON\n        Uses object literals\n        lightweight\n        */\n        \n        /*\n        parse json2\n        parse\n        stringify\n        */\n        \n        //using json2\n        \n        var input = {};\n        \n        eval(input)\n\n        withJson2 = JSON.parse(input);\n        \n        JSON.stringify\n        \n        // isNAN\n        \n        toplevel function\n        \n        isNAN(5) //= false\n        parseFloat(\"48\") //string to number\n        \n        \n        </script>\n"],[0,"    </he"]],"start1":51,"start2":51,"length1":16,"length2":1360}]],"length":1447,"saved":false}
